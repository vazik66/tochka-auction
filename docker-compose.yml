version: "3.8"

services:
  web:
    build: .
    restart: always
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public

      # http
      - traefik.http.services.app.loadbalancer.server.port=80
      - traefik.http.routers.app-http.entrypoints=http
      - traefik.http.routers.app-http.rule=Host(`api.milf-tochka.ru`)

      # https
      - traefik.http.routers.app-https.entrypoints=https
      - traefik.http.routers.app-https.rule=Host(`api.milf-tochka.ru`)
      - traefik.http.routers.app-https.tls=true

      # lets encrypt
      - traefik.http.routers.app-https.tls.certresolver=le

      # Redirect http to https
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      - traefik.http.routers.app-http.middlewares=https-redirect

      # rate limitter
#      - traefik.http.routers.app-https.middlewares=api-ratelimit
#      - traefik.http.middlewares.api-ratelimit.ratelimit.average=2000
#      - traefik.http.middlewares.api-ratelimit.ratelimit.period=1m

    networks:
      - traefik-public

    volumes:  
      - .:/app
    depends_on:
      - database

  database:
    image: postgres:12
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    networks:
      - traefik-public

  memcached:
    image: memcached:1.6.5-alpine
    restart: always
    ports:
      - "11211:11211"
    command: -m 64
    networks:
      - traefik-public

#  adminer:
#    image: adminer
#    restart: always
#    environment:
#      - ADMINER_DESIGN=pepa-linha
#    ports:
#      - "8081:8080"
#    depends_on:
#      - database
#    networks:
#      - traefik-public
#    labels:
#      - traefik.enable=true

networks:
  traefik-public:
    external: true

volumes:
  postgres_data:  

